#include <iostream>
#include <cstdio>
using namespace std;
int n, m, w[10010];
int h[10000];

bool pd(int x){ // x为满足条件的最重点重量，如果分组数小于等于m，那么是可以成立，否则是不成立
	int t = x, count = 1; // 分组次数初始化为1
	for(int i=1; i<=n; i++){
		if(t<w[i]){ // 本组放不下了，需重新开一组
			t = x;  //重新开一组，空间初始化
			count ++;   // 组数增加1
			if(t<w[i]) // 如果某一个人比最重重量还要大，不可能成立
				return false;
			else
				t -= w[i];  //占用本组的空间
		}
		else{
			t -= w[i];  //占用本组的空间
		}
	}
	return count <= m;
}

void solve(){
	int l = 0, sum = 0;
	for(int i=1; i<=n; i++)
		sum += w[i];
	int r = sum;
	while(r-l>1){
		int mid = (l+r)/2;
		if(pd(mid)) // 假定mid是能满足条件的重量，要求最小的mid
			r = mid;  // 能满足，因此为右区间
		else
			l = mid;  // 不能满足，因为为左区间
	}
	cout << r;
}

int main(){
//	freopen("data.txt", "r", stdin);
	cin >> n >> m;
	for(int i=1; i<=n; i++)
		cin >> w[i];
	solve();
	return 0;
}
