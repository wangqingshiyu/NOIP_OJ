//n<=100，2^100超过longlong, 需要考虑高精度 
//规律是 a[i] = 2*a[i-1] +/- 1; 
#include <iostream>
#include <cstring>
using namespace std;
int a[1000], b[1000], c[1000];

void Big(int t){
	int x = a[0];
	int jw = t;
	for(int i=1; i<=x; i++){
		c[i] = a[i]+b[i]+jw;
		jw = c[i]/10;
		c[i] %= 10;
	}
	if(jw>0)
		c[++x] = jw;
	c[0] = x;
}

int main(){
	int n;
	cin >> n;
	if(n==1){
		cout << "1";
		return 0; 
	}
	a[0] = 1; //长度 
	a[1] = 1; //数字
	memcpy(b, a, sizeof(a)); 
	int k = 1; //用来控制+1/-1 
	for(int i=2; i<=n; i++){
		Big(k); //c=a+b
		k = -k; //变号
		memcpy(a, c, sizeof(c)); //a=c
		memcpy(b, c, sizeof(c)); //b=c
	}
	// 倒序输出
	for(int i=c[0]; i>=1; i--)
		cout << c[i]; 
	return 0;
}
