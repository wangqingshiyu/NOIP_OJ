#include <iostream>
#include <queue>
using namespace std;
struct data{
	int x, y;
	int t;
};
queue <data> q;
int n, m, sx, sy;
int a[110][110];
int d[8][2] ={{-1, 0}, {-1, 1}, {0, 1}, {1, 1}, {1, 0}, {1, -1}, {0, -1}, {-1, -1}};

int bfs(){
	data u;
	while(!q.empty()){
		u = q.front();
		q.pop();
		for(int i=0; i<8; i++){
			int tx = u.x+d[i][0];
			int ty = u.y+d[i][1];
			if(tx>0 && tx<=n && ty>0 && ty<=m && a[tx][ty]==0){
				q.push((data){tx, ty, u.t+1});
				a[tx][ty] = u.t+1;
			}
		}	
	}
	return u.t;	
}

int main(){
	char ch;
	cin >> m >> n >> sy >> sx;
	for(int i=1; i<=n; i++)
		for(int j=1; j<=m; j++){
			cin >> ch;
			if(ch=='.')
				a[i][j] = 0;	
			if(ch=='*' || ch==' ')
				a[i][j] = -1;
		}
	q.push((data){sx, sy, 0});
	a[sx][sy] = 1;
	cout << bfs();
	return 0;
}
